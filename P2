-- Create Guide table
create table guide(
    guide_no int primary key,
    guide_name varchar(50) not null,
    guide_research_domain varchar(100) not null,
    contact_No int not null,
    email_id varchar(100) not null
);

-- Create Student table
create table student(
    roll_no int primary key,
    name varchar(50) not null,
    sem int not null,
    degree varchar(50) not null,
    contact_no int not null,
    guide_no int,
    foreign key (guide_no) references guide(guide_no)
);

-- Create PROJECT table
create table project(
    project_no int primary key,
    project_title varchar(100) not null,
    project_area varchar(100) not null,
    start_dt date not null,
    guide_no int,
    foreign key (guide_no) references guide(guide_no)
);

-- Create GROUP table
create table g_roups(
    group_code int primary key,
    roll_no int not null,
    foreign key (roll_no) references student(roll_no)
);

-- Create PROJECT_GROUP table
create table project_group(
    group_code int,
    project_no int,
    no_of_students int,
    primary key (group_code, project_no),
    foreign key (group_code) references g_roups(group_code),
    foreign key (project_no) references project(project_no)
);

-- Insert records into STUDENT table
INSERT INTO STUDENT (Rollno, Name, Sem, Degree, Contact_no, Guide_No)
VALUES
(1, 'John Doe', 4, 'Computer Science', 1234567890, 101),
(2, 'Jane Smith', 3, 'Electrical Engineering', 9876543210, 102),
-- Add more records as needed

-- Insert records into GUIDE table
INSERT INTO GUIDE (Guide_No, Guide_name, Guide_research_domain, Contact_No, Email_Id)
VALUES
(101, 'Dr. Smith', 'Machine Learning', 1122334455, 'smith@example.com'),
(102, 'Dr. Johnson', 'Database Systems', 9988776655, 'johnson@example.com'),
-- Add more records as needed

-- Insert records into PROJECT table
INSERT INTO PROJECT (Project_No, Project_title, Project_Area, Start_dt, Guide_No)
VALUES
(1, 'Machine Learning Project', 'Machine Learning', '2024-01-01', 101),
(2, 'Database Project', 'Database Systems', '2024-02-01', 102),
-- Add more records as needed

-- Insert records into GROUP table
INSERT INTO g_roup (Group_Code, Roll_No)
VALUES
(101, 1),
(102, 2),
-- Add more records as needed

-- Insert records into PROJECT_GROUP table
INSERT INTO PROJECT_GROUP (Group_Code, Project_No, no_of_students)
VALUES
(101, 1, 3),
(102, 2, 4),
-- Add more records as needed

-- Find the list of guides who are guiding more than two student groups
SELECT DISTINCT g.Guide_name
FROM GUIDE g
JOIN PROJECT p ON g.Guide_No = p.Guide_No
JOIN PROJECT_GROUP pg ON p.Project_No = pg.Project_No
GROUP BY g.Guide_No
HAVING COUNT(DISTINCT pg.Group_Code) > 2;

-- Find the list of project numbers, project names, and guide names in the domain of Database
SELECT p.Project_No, p.Project_title, g.Guide_name
FROM PROJECT p
JOIN GUIDE g ON p.Guide_No = g.Guide_No
WHERE g.Guide_research_domain = 'Database Systems';

-- Create a view as student_project_details that lists student name, project name, and guide name
CREATE VIEW student_project_details AS
SELECT s.Name AS Student_Name, p.Project_title AS Project_Name, g.Guide_name AS Guide_Name
FROM STUDENT s
JOIN PROJECT_GROUP pg ON s.Rollno = pg.Group_Code
JOIN PROJECT p ON pg.Project_No = p.Project_No
JOIN GUIDE g ON p.Guide_No = g.Guide_No;
























